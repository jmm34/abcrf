{
    "contents" : "err.abcrf <- function(x)\n{\n  rf <- x$model.rf\n  modindex <- x$y\n  nmod <- nlevels(modindex)\n  sumsta <- x$sumsta\n\n  mimi <- predict(rf,sumsta,predict.all=TRUE)$predictions ## prediction avec combien de cores ?\n  if (rf$ntree<10) stop(\"the number of trees in the forest should be greater than 10\")\n  sequo <- seq(10,rf$num.trees, by=10)\n  #if (is.null(rf$prediction.error))\n  #{\n    res <- rep(0,length(sequo))\n    h <- 0\n    pb=txtProgressBar(min=0,max=length(sequo),style=3)\n    for (j in sequo) \n    {\n      mama <- sample(paste(1:nmod),nrow(sumsta),replace=TRUE)\n      for (i in 1:nrow(sumsta)) \n      {\n        inbag <- matrix(unlist(rf$inbag.counts, use.names=FALSE), ncol=rf$num.trees, byrow=FALSE)\n        outbag <- (1:j)[inbag[i,1:j]==0] # Ai-je bien delistÃ© mon inbag ?\n        if (length(outbag)>0) mama[i] <- names(which.max(table(as.factor(mimi[i,outbag]))))\n      }\n    h <- h+1\n    res[h] <- mean(as.factor(mama)!=modindex)\n    setTxtProgressBar(pb,h)\n    }\n    close(pb)\n  #} else res <- rf$err.rate[sequo,1]\n  plot(sequo,res,ylab=\"Prior error rate\",xlab=\"Number of trees\",type=\"l\")\n  cbind(ntree=sequo,error.rate=res)\n}\n",
    "created" : 1478875919640.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2311134889",
    "id" : "F420EFC4",
    "lastKnownWriteTime" : 1478943974,
    "path" : "F:/These/abcrf_sauvegarde_21_11_2016/R/err.abcrf.R",
    "project_path" : "R/err.abcrf.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}