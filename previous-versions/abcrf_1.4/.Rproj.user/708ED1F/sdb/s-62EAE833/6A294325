{
    "collab_server" : "",
    "contents" : "plot.abcrf <- function(x, obs=NULL, training, n.var=20, main=\"\", pdf=FALSE, ...)\n{\n  \n  if (!inherits(obs, \"data.frame\") && !is.null(obs) ) \n    stop(\"obs needs to be a data.frame object or NULL\")\n  if (!inherits(training, \"data.frame\"))\n    stop(\"training needs to be a data.frame object\")\n  \n\told.par <- par(no.readonly = TRUE)\n\tif (length(x$model.rf$variable.importance)<20) n.var <- length(x$model.rf$variable.importance)\n\n\tmf <- match.call(expand.dots=FALSE)\n\tmf <- mf[1]\n\tmf$formula <- x$formula\n\tmf$data <- training\n\tmf[[1L]] <- as.name(\"model.frame\")\n\tmf <- eval(mf, parent.frame() )\n\tmt <- attr(mf, \"terms\")\n\tmodindex <- model.response(mf)\n\t\n \tif (x$lda) {\n \t  if (pdf) { \n \t    pdf(\"graph_varImpPlot.pdf\")\n\t\t  variableImpPlot(x, n.var=n.var, main=main, ...)\n\t\t  dev.off()\n \t  }\n \t  variableImpPlot(x, n.var=n.var, main=main, ...)\n\t\tnmod <- length(x$model.rf$forest$levels)\n\t\tnstat <- x$model.rf$num.independent.variables\n\t\tprojections <- predict(x$model.lda, training)$x\n\t\tif  (!is.null(obs)) projobs <- predict(x$model.lda, obs)$x\n\t\tcoloris <- rainbow(nmod)\n\t\tcolo <- coloris[modindex]\n\t\treadline(\"Press <ENTER> to Continue\")\n    if (nmod > 2) {\n      if (pdf)\n        {\n        pdf(\"graph_lda.pdf\")\n        plot(projections[,1:2], col=colo, pch=3)\n        legend(\"topleft\", legend = as.character(x$model.rf$forest$levels), col = coloris, \n               pch = 15, bty = \"o\", pt.cex = 2, cex = .8, horiz = TRUE, \n               inset = c(.01, .01), title = \"Models\", bg = \"white\")\n\t  \t  if  (!is.null(obs)) points(projobs[1],projobs[2],pch=\"*\",cex=5.3)\n\t  \t  dev.off()\n\t\t    }\n      plot(projections[,1:2], col=colo, pch=3)\n      legend(\"topleft\", legend = as.character(x$model.rf$forest$levels), col = coloris, \n             pch = 15, bty = \"o\", pt.cex = 2, cex = .8, horiz = TRUE, \n             inset = c(.01, .01), title = \"Models\", bg = \"white\")\n      if  (!is.null(obs)) points(projobs[1],projobs[2],pch=\"*\",cex=5.3)\n    } else {\n      l1 <- x$model.rf$forest$levels[1]\n      l2 <- x$model.rf$forest$levels[2]\n      d1 <- density(projections[modindex == l1])\n      d2 <- density(projections[modindex == l2])\n      coloris <- c(\"blue\", \"orange\")\n      xrange <- range(c(d1$x, d2$x))\n      yrange <- c(0, 1.2*max(c(d1$y, d2$y)))\n      if (pdf)\n        {\n        pdf(\"graph_lda.pdf\")\n        plot(d1, xlim = xrange, ylim = yrange,\n             col=coloris[1], main=\"\", xlab=\"\")\n        lines(d2, col=coloris[2])\n        legend(\"topleft\", legend = as.character(x$model.rf$forest$levels), col = coloris, \n                cex = .8, horiz = TRUE, lty=1, bty=\"o\",\n               inset = c(.01, .01), title = \"Models\", bg = \"white\")\n      \tif  (!is.null(obs)) abline(v=projobs)\n        dev.off()\n      }\n      plot(d1, xlim = xrange, ylim = yrange,\n           col=coloris[1], main=\"\", xlab=\"\")\n      lines(d2, col=coloris[2])\n      legend(\"topleft\", legend = as.character(x$model.rf$forest$levels), col = coloris, \n              cex = .8, horiz = TRUE, lty=1, bty=\"o\",\n             inset = c(.01, .01), title = \"Models\", bg = \"white\")\n      if  (!is.null(obs)) abline(v=projobs)\n    }\n\t} else {\n\t  if (pdf)\n\t    {\n\t    pdf(\"graph_varImpPlot.pdf\")\n\t    variableImpPlot(x , n.var=n.var, ...)\n\t    dev.off()\n\t    }\n\t  variableImpPlot(x , n.var=n.var, main=main, ...)\n\t}\n\tpar(old.par)\n}",
    "created" : 1479999097462.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1299728441",
    "id" : "6A294325",
    "lastKnownWriteTime" : 1479748202,
    "last_content_update" : 1479748202,
    "path" : "E:/These/abcrf 1.4 avec ranger/abcrf_1.4/R/plot.abcrf.R",
    "project_path" : "R/plot.abcrf.R",
    "properties" : {
    },
    "relative_order" : 13,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}