{
    "collab_server" : "",
    "contents" : "err.abcrf <- function(object, training, paral=FALSE, ncores= if(paral) max(detectCores()-1,1) else 1)\n{\n  if (!inherits(training, \"data.frame\"))\n    stop(\"training needs to be a data.frame object\")\n  if ( (!is.logical(paral)) && (length(paral) != 1L) )\n    stop(\"paral should be TRUE or FALSE\")\n  if(ncores > detectCores() || ncores < 1)\n    stop(\"incorrect number of CPU cores\")\n  \n  nmod <- length(object$model.rf$forest$levels)\n  ntrain <- nrow(training)\n   \n  mf <- match.call(expand.dots=FALSE)\n  mf <- mf[1]\n  mf$formula <- object$formula\n  mf$data <- training\n  mf[[1L]] <- as.name(\"model.frame\")\n  mf <- eval(mf, parent.frame() )\n  mt <- attr(mf, \"terms\")\n  modindex <- model.response(mf)\n  \n  if (object$lda) {\n    training <- cbind( training, predict(object$model.lda, training)$x )\n  }\n  inbag <- matrix(unlist(object$model.rf$inbag.counts, use.names=FALSE), ncol=object$model.rf$num.trees, byrow=FALSE)\n  \n  mimi <- predict(object$model.rf, training, predict.all=TRUE, num.threads=ncores)$predictions\n  if (object$model.rf$num.trees < 10) stop(\"the number of trees in the forest should be greater than 10\")\n  sequo <- seq(10,object$model.rf$num.trees, length.out = 20)\n\n  res <- rep(0,length(sequo))\n  h <- 0\n  pb=txtProgressBar(min=0,max=length(sequo),style=3)\n  for (j in sequo) \n  {\n    mama <- sample(paste(1:nmod),ntrain,replace=TRUE)\n    for (i in 1:ntrain) \n    {\n      outbag <- (1:j)[inbag[i,1:j]==0]\n      if (length(outbag)>0) mama[i] <- names(which.max(table(as.factor(mimi[i,outbag]))))\n    }\n  h <- h+1\n  res[h] <- mean(as.factor(mama)!=modindex)\n  setTxtProgressBar(pb,h)\n  }\n  close(pb)\n\n  plot(sequo,res,ylab=\"Prior error rate\",xlab=\"Number of trees\",type=\"l\")\n  cbind(ntree=floor(sequo), error.rate=res)\n}\n",
    "created" : 1479999036130.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2905129450",
    "id" : "F9B73543",
    "lastKnownWriteTime" : 1479801502,
    "last_content_update" : 1479801502,
    "path" : "C:/Users/Louis Raynal/Dropbox/ODOF/abcrf 1.4 avec ranger/abcrf_1.4/R/err.abcrf.R",
    "project_path" : "R/err.abcrf.R",
    "properties" : {
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}