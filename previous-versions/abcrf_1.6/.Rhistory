tes
help(formula)
fo <- y ~ x1+x2
fo
terms(fo)
summary(fo)
str(fo)
fo
fo[[1]]
fo[[2]]
fo[[3]]
fo[3]]
terms(fo)
fo$variables
fo$v
str(fo,"variables")
fo[[2]]
group
group <- list(a=c(1,2),b=3)
group[[1]]
names(group)
length(names(group))
group <- list(1=c(1,2),2=3)
group <- list(a=c(1,2),b=3)
group <- list(c(1,2),3)
group
group <- list(a=c(1,2),b=3)
letters[1:5]
group <- list(c(1,2),3)
nmaes(group)
names(group)
group
length(group)
group <- list(a=c(1,2),b=3)
length(group)
group <- list(c(1,2),b=3)
names(group)
names(group)[1]
names(group)[1]==""
names(group)==""
sum(names(group)=="")
group <- list(c(1,2),3)
sum(names(group)=="")
x <- rnorm(100)
f1 <- ecdf(x)
x <- rnorm(100)
f2 <- ecdf(x)
plot(f1)
plot(f2)
plot(f1,f2)
plot(f1)
plot(f2,col="red",new=TRUE)
plot(f1)
lines(f2,col="red")
median(f1(0),f2(0))
x <- rnorm(10)
y <- rnorm(18)
median(quantile(x,0.47),quantile(y,0.47))
quantile(x,0.47)
x
x <- rnorm(100)
y <- rnorm(200)
median(quantile(x,0.47),quantile(y,0.47))
help(quantile)
getAnywhere("wtd.quantile")
getAnywhere("quantile")
getAnywhere("forest")
getAnywhere("forests")
getAnywhere("plot.randomForest")
getAnywhere("plot.randomForests")
getAnywhere("plot")
knitr::opts_chunk$set(echo = TRUE)
library(xts)
library(cluster)
library(factoextra)
library(cba)
library(dendextend)
library(plyr)
library(knitr)
montpellier14 <- read.csv("montpellier-2014.csv",sep=";",header=TRUE)
montpellier14$date <- strptime(montpellier14$date,"%d/%m/%y %H:%M")
smont14 <- c(2,2,3,2,1,1,1,2,2,3,1,2,2,3,3,4)
mo14 <- as.matrix(montpellier14[,-1])
mo14 <- xts(mo14,montpellier14$date)
plot(mo14,main="",subset="2014-08-03/2014-08-05",major.ticks="auto",minor.ticks="auto",col=rainbow(16))
library(xts)
library(cluster)
library(factoextra)
library(cba)
library(dendextend)
library(plyr)
library(knitr)
montpellier13 <- read.csv("montpellier-2013.csv",sep=";",header=TRUE)
montpellier13$date <- strptime(montpellier13$date,"%d/%m/%y %H:%M")-8*60*60
smont13 <- c(2,2,3,2,1,1,1,2,2,3,4)
montpellier13 <- montpellier13[-c(1:146,15411:15602),]
mo13 <- as.matrix(montpellier13[,-1])
mo13 <- xts(mo13,montpellier13$date)
mo13.daily.mean <- apply.daily(mo13,mean)
mo13.mean <- as.matrix(t(mo13.daily.mean))
colnames(mo13.mean) <- paste("mean.d",1:dim(mo13.mean)[2],sep="")
mo13.daily.var <- mo13.daily.mean
for (i in 1:dim(mo13)[2]) mo13.daily.var[,i] <-
apply.daily(mo13[,i],function(x) {var(x)})
mo13.var <- as.matrix(t(mo13.daily.var))
colnames(mo13.var) <- paste("var.d",1:dim(mo13.var)[2],sep="")
mo13.daily.range <- mo13.daily.mean
for (i in 1:dim(mo13)[2]) mo13.daily.range[,i] <-
apply.daily(mo13[,i],function(x) {max(x)-min(x)})
mo13.range <- as.matrix(t(mo13.daily.range))
colnames(mo13.range) <- paste("range.d",1:dim(mo13.range)[2],sep="")
mo13.daily <- scale(data.frame(cbind(mo13.mean,mo13.var,mo13.range)))
rownames(mo13.daily) <- paste(rownames(mo13.daily),as.character(smont13),sep=".")
hc <- hcut(mo13.daily)
d <- dist(mo13.daily)
co <- order.optimal(d, hc$merge)
hc$merge <- co$merge
hc$order <- co$order
plot(hc,hang=-1,cex=1,sub="",xlab="",main="Dendrogramme Montpellier 2013")
cluster.mont13 <- cutree(hc,4,order_clusters_as_data = FALSE)
rect.hclust(hc,k=4,border=1:4)
dt <- data.frame(mean=colMeans(mo13.daily.mean),var=colMeans(mo13.daily.var),
range=colMeans(mo13.daily.range),
Cluster=as.factor(cluster.mont13[order(hc$order)]))
table1 <- ddply(dt,~Cluster,summarize,Moyenne=mean(mean),Variance=mean(var),
Amplitude=mean(range))
table1 <- cbind(table1[,-1],Cluster=c("noir","rouge","vert","bleu"))
table1 <- table1[,c(4,1:3)]
kable(table1,digits=2,caption="\\label{tab:mo13.t1} Montpellier 2013,
moyennes des moyennes, variances et amplitudes journalières
par classe, résultats hclust 4 classes")
